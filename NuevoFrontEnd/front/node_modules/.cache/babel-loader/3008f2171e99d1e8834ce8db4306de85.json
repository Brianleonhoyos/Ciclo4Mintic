{"ast":null,"code":"var _jsxFileName = \"C:\\\\WebDevelop\\\\Proyectos\\\\Ciclo4Mintic\\\\NuevoFrontEnd\\\\front\\\\src\\\\Componentes\\\\Productos.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Productos extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      productos: [],\n      status: null\n    };\n\n    this.getProductos = () => {\n      //Aqui trae todos los productos de la API\n      axios.get(\"http://localhost:8081/api/productos\") //Aqui va la url de listar\n      .then(res => {\n        console.log(res.data);\n        this.setState({\n          productos: res.data\n        });\n      }); //Accion de que va a hacer el microservicio con esa info\n    };\n\n    this.eliminarProductos = codigo => {\n      axios.delete(\"http://localhost:8081/api/productos/{codigo}\" + codigo) // Lo que concateno son los parametros\n      .then(res => {\n        this.setState({\n          status: \"delete\"\n        });\n        window.location.reload(true);\n      });\n    };\n  }\n\n  componentWillUnmount() {\n    //Esto es para llamar cuando se arma el componente\n    this.getProductos();\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      //Aqui puedo retornar valores html, todo dentro de <div>, si no sale error\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Productos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Codigo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nombre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Nit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Precio\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Valor Mas IVA\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Acciones mhe?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.productos.map(producto => {\n              //this.state para ver el dato. productos el nombre del array y map para recorrerlo, luego con cada iteracion (map es un bucle) se guarda en la funcion productos\n              return (\n                /*#__PURE__*/\n                //Si pongo la etiqueta div se me va a repetir un CHINGO!!!, por eso react. y esa madre porque eso es un fragmento que cumple con la funcion del DIV pero solo se creara una sola vez envolviendo todo el rellenito UwU \n                _jsxDEV(React.Freagment, {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: producto.codigo //Para buscar dentro del JSON, .codigo_Producto seria el codigo que tiene desde el mongo, luego seria con el nombre y pues tu ya me entiendes\n\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: producto.nombreProducto\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: producto.nitProveedor\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: producto.precioCompra\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 71,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: producto.ivaCompra\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 74,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: producto.precioVenta\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: [/*#__PURE__*/_jsxDEV(Link, {\n                        to: \"/editarProductos/\" + producto.nitProveedor,\n                        children: \"Editar\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 81,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onclick: () => {\n                          this.eliminarProductos(producto.codigo);\n                        },\n                        children: \"Eliminar\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 49\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        onclick: () => {\n                          this.getProductos(producto.codigo);\n                        },\n                        children: \"Actualizar Pagina\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 87,\n                        columnNumber: 49\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 37\n                }, this)\n              );\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    );\n  }\n\n}\n\nexport default Productos;","map":{"version":3,"sources":["C:/WebDevelop/Proyectos/Ciclo4Mintic/NuevoFrontEnd/front/src/Componentes/Productos.js"],"names":["React","Component","axios","Link","Productos","state","productos","status","getProductos","get","then","res","console","log","data","setState","eliminarProductos","codigo","delete","window","location","reload","componentWillUnmount","render","map","producto","nombreProducto","nitProveedor","precioCompra","ivaCompra","precioVenta"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link} from \"react-router-dom\";\r\n\r\n\r\nclass Productos extends Component {\r\n\r\n    state = {\r\n        productos: [],\r\n        status: null\r\n    }\r\n\r\n    componentWillUnmount() {//Esto es para llamar cuando se arma el componente\r\n        this.getProductos();\r\n    }\r\n\r\n    getProductos = () => {\r\n        //Aqui trae todos los productos de la API\r\n        axios.get(\"http://localhost:8081/api/productos\") //Aqui va la url de listar\r\n            .then(res => {\r\n                console.log(res.data)\r\n                this.setState({\r\n                    productos: res.data\r\n                })\r\n            }); //Accion de que va a hacer el microservicio con esa info\r\n    }\r\n\r\n    eliminarProductos = (codigo) => {\r\n        axios.delete(\"http://localhost:8081/api/productos/{codigo}\" + codigo) // Lo que concateno son los parametros\r\n            .then(res => {\r\n                this.setState({\r\n                    status: \"delete\"\r\n                });\r\n\r\n                window.location.reload(true);\r\n\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            //Aqui puedo retornar valores html, todo dentro de <div>, si no sale error\r\n            <div>\r\n                <h1>Productos</h1>\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Codigo</th>\r\n                            <th>Nombre</th>\r\n                            <th>Nit</th>\r\n                            <th>Precio</th>\r\n                            <th>Valor Mas IVA</th>\r\n                            <th>Acciones mhe?</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {\r\n                            this.state.productos.map((producto) => { //this.state para ver el dato. productos el nombre del array y map para recorrerlo, luego con cada iteracion (map es un bucle) se guarda en la funcion productos\r\n                                return (//Si pongo la etiqueta div se me va a repetir un CHINGO!!!, por eso react. y esa madre porque eso es un fragmento que cumple con la funcion del DIV pero solo se creara una sola vez envolviendo todo el rellenito UwU \r\n                                    <React.Freagment>\r\n                                        <tr>\r\n                                            <td>{\r\n                                                producto.codigo//Para buscar dentro del JSON, .codigo_Producto seria el codigo que tiene desde el mongo, luego seria con el nombre y pues tu ya me entiendes\r\n                                            }</td>\r\n                                            <td>{\r\n                                                producto.nombreProducto\r\n                                            }</td>\r\n                                            <td>{\r\n                                                producto.nitProveedor\r\n                                            }</td>\r\n                                            <td>{\r\n                                                producto.precioCompra\r\n                                            }</td>\r\n                                            <td>{\r\n                                                producto.ivaCompra\r\n                                            }</td>\r\n                                            <td>{\r\n                                                producto.precioVenta\r\n                                            }</td>\r\n                                            <td>\r\n                                                <Link to={\"/editarProductos/\" + producto.nitProveedor}>Editar</Link>\r\n                                                <button onclick={\r\n                                                    () => {\r\n                                                        this.eliminarProductos(producto.codigo);\r\n                                                    }\r\n                                                }>Eliminar</button>\r\n                                                <button onclick={\r\n                                                    () => {\r\n                                                        this.getProductos(producto.codigo);\r\n                                                    }\r\n                                                }>Actualizar Pagina</button>\r\n                                                </td>\r\n\r\n\r\n\r\n                                        </tr>\r\n\r\n                                    </React.Freagment>\r\n                                );\r\n                            })\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Productos;"]},"metadata":{},"sourceType":"module"}