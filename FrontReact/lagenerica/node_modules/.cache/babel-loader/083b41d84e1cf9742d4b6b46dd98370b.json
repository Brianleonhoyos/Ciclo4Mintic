{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport DataTable from 'react-data-table-component';\n\nfunction leerCSV() {\n  _s();\n\n  const [columns, setColumns] = useState([]);\n  const [data, setData] = useState([]); // process CSV data\n\n  const processData = dataString => {\n    const dataStringLines = dataString.split(/\\r\\n|\\n/);\n    const headers = dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n    const list = [];\n\n    for (let i = 1; i < dataStringLines.length; i++) {\n      const row = dataStringLines[i].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n      if (headers && row.length === headers.length) {\n        const obj = {};\n\n        for (let j = 0; j < headers.length; j++) {\n          let d = row[j];\n\n          if (d.length > 0) {\n            if (d[0] === '\"') d = d.substring(1, d.length - 1);\n            if (d[d.length - 1] === '\"') d = d.substring(d.length - 2, 1);\n          }\n\n          if (headers[j]) {\n            obj[headers[j]] = d;\n          }\n        } // eliminar las filas en blanco\n\n\n        if (Object.values(obj).filter(x => x).length > 0) {\n          list.push(obj);\n        }\n      }\n    }\n  };\n}\n\n_s(leerCSV, \"9IcVAfeXZVJa5ZMpC133tw16skE=\");\n\nclass Productos extends Component {}\n\nexport default Productos;","map":{"version":3,"sources":["C:/WebDevelop/MisProyectos/Tienda/lagenerica/src/Componentes/Productos.js"],"names":["React","useState","XLSX","DataTable","leerCSV","columns","setColumns","data","setData","processData","dataString","dataStringLines","split","headers","list","i","length","row","obj","j","d","substring","Object","values","filter","x","push","Productos","Component"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,IAAZ,MAAsB,MAAtB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AAEf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC,CAHe,CAKf;;AACA,QAAMQ,WAAW,GAAGC,UAAU,IAAI;AAC9B,UAAMC,eAAe,GAAGD,UAAU,CAACE,KAAX,CAAiB,SAAjB,CAAxB;AACA,UAAMC,OAAO,GAAGF,eAAe,CAAC,CAAD,CAAf,CAAmBC,KAAnB,CAAyB,qCAAzB,CAAhB;AAEA,UAAME,IAAI,GAAG,EAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,eAAe,CAACK,MAApC,EAA4CD,CAAC,EAA7C,EAAiD;AAC7C,YAAME,GAAG,GAAGN,eAAe,CAACI,CAAD,CAAf,CAAmBH,KAAnB,CAAyB,qCAAzB,CAAZ;;AACA,UAAIC,OAAO,IAAII,GAAG,CAACD,MAAJ,KAAeH,OAAO,CAACG,MAAtC,EAA8C;AAC1C,cAAME,GAAG,GAAG,EAAZ;;AACA,aAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,OAAO,CAACG,MAA5B,EAAoCG,CAAC,EAArC,EAAyC;AACrC,cAAIC,CAAC,GAAGH,GAAG,CAACE,CAAD,CAAX;;AACA,cAAIC,CAAC,CAACJ,MAAF,GAAW,CAAf,EAAkB;AACd,gBAAII,CAAC,CAAC,CAAD,CAAD,KAAS,GAAb,EACIA,CAAC,GAAGA,CAAC,CAACC,SAAF,CAAY,CAAZ,EAAeD,CAAC,CAACJ,MAAF,GAAW,CAA1B,CAAJ;AACJ,gBAAII,CAAC,CAACA,CAAC,CAACJ,MAAF,GAAW,CAAZ,CAAD,KAAoB,GAAxB,EACII,CAAC,GAAGA,CAAC,CAACC,SAAF,CAAYD,CAAC,CAACJ,MAAF,GAAW,CAAvB,EAA0B,CAA1B,CAAJ;AACP;;AACD,cAAIH,OAAO,CAACM,CAAD,CAAX,EAAgB;AACZD,YAAAA,GAAG,CAACL,OAAO,CAACM,CAAD,CAAR,CAAH,GAAkBC,CAAlB;AACH;AACJ,SAbyC,CAc1C;;;AACA,YAAIE,MAAM,CAACC,MAAP,CAAcL,GAAd,EAAmBM,MAAnB,CAA0BC,CAAC,IAAIA,CAA/B,EAAkCT,MAAlC,GAA2C,CAA/C,EAAkD;AAC9CF,UAAAA,IAAI,CAACY,IAAL,CAAUR,GAAV;AACH;AACJ;AACJ;AACJ,GA3BD;AA4BH;;GAlCQd,O;;AAoCT,MAAMuB,SAAN,SAAwBC,SAAxB,CAAkC;;AAMlC,eAAeD,SAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport DataTable from 'react-data-table-component';\r\n\r\nfunction leerCSV() {\r\n\r\n    const [columns, setColumns] = useState([]);\r\n    const [data, setData] = useState([]);\r\n\r\n    // process CSV data\r\n    const processData = dataString => {\r\n        const dataStringLines = dataString.split(/\\r\\n|\\n/);\r\n        const headers = dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\r\n\r\n        const list = [];\r\n        for (let i = 1; i < dataStringLines.length; i++) {\r\n            const row = dataStringLines[i].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\r\n            if (headers && row.length === headers.length) {\r\n                const obj = {};\r\n                for (let j = 0; j < headers.length; j++) {\r\n                    let d = row[j];\r\n                    if (d.length > 0) {\r\n                        if (d[0] === '\"')\r\n                            d = d.substring(1, d.length - 1);\r\n                        if (d[d.length - 1] === '\"')\r\n                            d = d.substring(d.length - 2, 1);\r\n                    }\r\n                    if (headers[j]) {\r\n                        obj[headers[j]] = d;\r\n                    }\r\n                }\r\n                // eliminar las filas en blanco\r\n                if (Object.values(obj).filter(x => x).length > 0) {\r\n                    list.push(obj);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Productos extends Component {\r\n\r\n\r\n}\r\n\r\n\r\nexport default Productos;"]},"metadata":{},"sourceType":"module"}